name: Verilate
on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  verilate:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake ninja-build

      # Based on the instructions <https://verilator.org/guide/latest/install.html#git-install>.

      - name: Checkout Verilator Sources
        uses: actions/checkout@v3
        with:
          repository: 'verilator/verilator'
          submodules: 'True'
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: 'verilator_src'
          ref: stable

      - name: Install Verilator Build Dependencies
        run: |
          sudo apt-get install git perl python3 make autoconf g++ flex bison ccache
          sudo apt-get install libunwind-dev
          sudo apt-get install libgoogle-perftools-dev numactl perl-doc
          sudo apt-get install libfl2  # Ubuntu only (ignore if gives error)
          sudo apt-get install libfl-dev  # Ubuntu only (ignore if gives error)
          sudo apt-get install help2man
          #sudo apt-get install zlibc zlib1g zlib1g-dev  # Ubuntu only (ignore if gives error)

      - name: Cache Verilator Object Files
        uses: actions/cache@v3
        with:
          path: verilator_src/src/obj_opt/*.o
          key: verilator-objects

      - name: Build Verilator From Source
        working-directory: 'verilator_src'
        run: |
          cd "$GITHUB_WORKSPACE/verilator_src"
          unset VERILATOR_ROOT
          autoconf    # Create ./configure script
          ./configure # Configure and create Makefile
          make

      - name: Install Verilator
        working-directory: 'verilator_src'
        run: |
          sudo make install

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'True'
      - name: Create Build Environment
        run: cmake -E make_directory "${{ runner.workspace }}/build"
      - name: Configure
        run: |
          cmake -G Ninja                           \
                -B "${{ runner.workspace }}/build" \
                -S "$GITHUB_WORKSPACE/verilator"
      - name: Build
        run: |
          cmake --build "${{ runner.workspace }}/build"
      - name: Run Tests
        run: |
          for f in $(find "${{ runner.workspace }}/build" -name CMakeFiles -prune -or -perm +111 -type f -print); do
            echo $F
            $f
          done
