name: Verilate
on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  verilator-build:
    runs-on: ubuntu-latest
    steps:
      # Based on the instructions <https://verilator.org/guide/latest/install.html#git-install>.
      - name: Checkout Sources
        uses: actions/checkout@v3
        with:
          repository: 'verilator/verilator'

      - name: Apt Update
        run: |
          sudo apt-get update

      - name: Install Build Dependencies
        run: |
          sudo apt-get install -y git perl python3 make autoconf g++ flex bison ccache
          sudo apt-get install -y libunwind-dev
          sudo apt-get install -y libgoogle-perftools-dev numactl perl-doc
          sudo apt-get install -y libfl2  # Ubuntu only (ignore if gives error)
          sudo apt-get install -y libfl-dev  # Ubuntu only (ignore if gives error)
          sudo apt-get install -y help2man
          #sudo apt-get install -y zlibc zlib1g zlib1g-dev  # Ubuntu only (ignore if gives error)

      - name: Configure
        run: |
          unset VERILATOR_ROOT
          autoconf    # Create ./configure script
          ./configure # Configure and create Makefile

      - name: Build
        run: |
          make

      - name: Test
        run: |
          make test

      - name: Tar the build
        working-directory: ${{ github.workspace }}
        run: |
          DIR=$(mktemp -d)
          mkdir "$DIR/verilator"
          rsync -a --exclude='.*' . "$DIR/verilator"
          cd "$DIR"
          tar --posix -c -z -f ~/verilator.tgz verilator

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: verilator.tgz
          path: ~/verilator.tgz

  verilate:
    needs: verilator-build
    runs-on: ubuntu-latest
    steps:
      - name: Download verilator
        uses: actions/download-artifact@v3
        with:
          name: verilator.tgz

      - name: Untar Verilator
        run: |
          tar xzvf verilator.tgz

      - name: Install Verilator
        run: |
          sudo make -C verilator install

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'True'

      - name: Create Build Environment
        run: cmake -E make_directory "${{ runner.workspace }}/build"

      - name: Configure
        run: |
          cmake -G Ninja -B "${{ runner.workspace }}/build" -S "$GITHUB_WORKSPACE/verilator"

      - name: Build
        run: |
          cmake --build "${{ runner.workspace }}/build"

      - name: Run Tests
        run: |
          for f in $(find "${{ runner.workspace }}/build" -name CMakeFiles -prune -or -perm /u+x -type f -print); do
            echo $F
            $f
          done
